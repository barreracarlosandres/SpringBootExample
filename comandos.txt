docker build -t posts .

docker build -t config-server .

docker build -t eureka-server .

docker run -d \
--name jaeger-all-in-one \
--network "posts" \
-p 16686:16686 -p 14268 -p 14250 \
jaegertracing/all-in-one:latest

docker run -d \
--name prometheus \
--network "posts" \
-v /mnt/d/proyectos/SpringBootExample/yalm/prometheus.yaml:/etc/prometheus/prometheus.yml \
-p 9090:9090 \
prom/prometheus:latest

docker run -d \
--name otelcollector \
--network "posts" \
-v /mnt/d/proyectos/SpringBootExample/yalm/otel-collector-config.yaml:/etc/otel-collector-config.yaml \
-p 1888:1888 -p 8888:8888 -p 8889:8889 -p 13133:13133 -p 4317:4317 -p 55679:55679 \
otel/opentelemetry-collector:0.41.0 "--config=/etc/otel-collector-config.yaml"

docker run -d --name posts --network "posts" -p 8090:8090 posts

docker run -d --name config-server --network "posts" -p 8899:8888 config-server:v1

docker run -d --name eureka-server --network "posts" -p 8761:8761 eureka-server:latest

docker run --name some-mongo -d mongo:latest

docker compose -f yalm/mongodb.yml -p db up -d
docker compose -p db stop

docker exec -it db-mongo-1 mongosh

docker exec -it nginx sh

sysctl net.ipv4.ip_forward


use admin
db.auth("roor", "example")

db.auth("post", "post")


db.createUser(db
  {
    user: "post",
    pwd:  "post",   // or cleartext password
    roles: [ { role: "readWrite", db: "posts" } ]
  }
)